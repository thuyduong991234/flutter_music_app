import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';

// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
class S implements WidgetsLocalizations {
  const S();

  static S current;

  static const GeneratedLocalizationsDelegate delegate =
      GeneratedLocalizationsDelegate();

  static S of(BuildContext context) => Localizations.of<S>(context, S);

  @override
  TextDirection get textDirection => TextDirection.ltr;

  String get Like => "Like";
  String get about => "About";
  String get actionCancel => "Cancel";
  String get actionConfirm => "Confirm";
  String get appName => "Love Music";
  String get appUpdateActionDownloadAgain => "Download";
  String get appUpdateActionInstallApk => "Install";
  String get appUpdateActionUpdate => "Update";
  String get appUpdateCheckUpdate => "Check Update";
  String get appUpdateDoubleBackTips => "Press back again, cancel download";
  String get appUpdateDownloadCanceled => "Download canceled";
  String get appUpdateDownloadFailed => "Download failed";
  String get appUpdateDownloading => "Downloading...";
  String get appUpdateLeastVersion => "Least version now ";
  String get appUpdateReDownloadContent =>
      "It has been detected that it has been downloaded, whether it is installed?";
  String get appUpdateUpdate => "Version Update";
  String get article_tag_top => "Top";
  String get autoBySystem => "Auto";
  String get clear => "Clear";
  String get close => "Close";
  String get coin => "Coin";
  String get collectionRemove => "Remove";
  String get darkMode => "Dark Mode";
  String get favourites => "Favorites";
  String get feedback => "FeedBack";
  String get fieldNotNull => "not empty";
  String get fontKuaiLe => "ZCOOL KuaiLe";
  String get githubIssue => "Can't find mail app,please github issues";
  String get loadFailed => "Load failed,retry later";
  String get logout => "Sign Out";
  String get myFavourites => "My favourites";
  String get needLogin => "Go to Sign In";
  String get noAccount => "No Account ? ";
  String get openBrowser => "Open Browser";
  String get password => "Please input Password";
  String get rate => "Rate";
  String get rePassword => "Confirm Password";
  String get refresh => "Refresh";
  String get refreshTwoLevel => "release to enter second floor";
  String get retry => "Retry";
  String get searchHistory => "History";
  String get searchHot => "Hot";
  String get searchShake => "Shake";
  String get setting => "Setting";
  String get settingFont => "System Font";
  String get share => "Share";
  String get signIn => "Sign In";
  String get signIn3thd => "More";
  String get welcome => "Welcome";
  String get signUp => "Sign Up";
  String get splashSkip => "Skip";
  String get searchResult => "Search Result:";
  String get tabFavorite => "Favorites";
  String get tabUser => "Me";
  String get theme => "Theme";
  String get toSignIn => "Sign In";
  String get viewAll => "View All";
  String get forYou => "Song new";
  String get takeCare => "Recommend for you";
  String get toSignUp => "Sign Up";
  String get twoPwdDifferent => "The two passwords differ";
  String get unLike => "UnLike";
  String get userName => "Please input Username";
  String get viewStateButtonLogin => "Sign In";
  String get viewStateButtonRefresh => "Refresh";
  String get viewStateButtonRetry => "Retry";
  String get viewStateMessageEmpty => "Nothing Found";
  String get viewStateMessageError => "Load Failed";
  String get viewStateMessageNetworkError => "Load Failed,Check network ";
  String get viewStateMessageUnAuth => "Not sign in yet";
  String get wechatAccount => "Wechat";
  String appUpdateFoundNewVersion(String version) => "New version $version";

  String get weekChart => "#WEEK CHART";
  String get week => "Week";
  String get ablumsHot => "Albums hot";
  String get songNew => "New songs";
  String get top100 => "Top 100";
  String get genres => "Genres";
  String get motions => "Topics";
  String get nations => "Nations";
  String get artistsTop => "Spotlight";
  String get numFollow => "follow";
  String get follow => "Follow";
  String get followed => "Followed";
  String get tabSearch => "Search";
  String get tabMusic => "Chart";
  String get titleLogin => "Login";
  String get titleInfo => "Info";
  String get titleLogout => "Logout";
  String get btnRandomPlay => "Random play";
  String get tabbarPlaylist => "Playlist";
  String get download => "Download";
  String get tabbarVietNam => "VIET NAM";
  String get titleAddToFavorite => "Add to Favorite";
  String get titleAddToPlaylist => "Add to My Playlist";
  String get createPlaylist => "Create new playlist";
  String get hintPlaylist => "Playlist #1";
  String get titleComment => "Comments";
  String get enterComment => "Enter your comments...";
  String get scheduler => "Scheduler";
  String get enterMinutes => "Enter minutes";
  String get loading => "Loading...";
  String get songs => "Songs";
  String get albums => "Albums";
  String get artists => "Artists";
  String get all => "All";
  String get canLike => "Can you like!";
  String get topSong => "Top songs";
  String get contributionArtists => "Contribution Artists";
  String get btnUpdate => "Update";
  String get titleConfirmPassword => "Confirm password";
  String get titleForgotPass => "Forgot Password?";
  String get btnLoginFB => "Login with Facebook";
  String get titleNoAccount => "Don't have an account?";
  String get titleHaveAccount => "Already have an account?";
  String get titleRegister => "Register Now";
  String get or => "or";
  String get warnLogin => "You need login for this action!";
  String get downloaded => "Downloaded";
  String get successCreatePlaylist => "Already created playlist ";
  String get successAddToDownload => "Already added to list downloading!";
  String get successAddFavorite => "Already added Favorite!";
  String get deleteFavorite => "Delete from Favorite";
  String get successDelete => "Already deleted from Favorite!";
  String get successAddToPlaylist => "Already add to playlist ";
  String get myMusic => "My music";
  String get hotTop100 => "Hot";
  String get top100VN => "Top 100 Viet Nam";
  String get top100AuMy => "Top 100 US - UK";
  String get top100Asia => "Top 100 Asia";
  String get top100Concert => "Top 100 Concert";
  String get noLyric => "Don't have lyric!";
  String get settingLanguage => "Language";
  String get searchSuggest => "Track, album, artist, podcast";
  String get titleNoti => "Notify";
  String get successRegister =>
      "You have successfully registered for an account!";
}

class $en extends S {
  const $en();
}

class $zh_CN extends S {
  const $zh_CN();

  @override
  TextDirection get textDirection => TextDirection.ltr;

  String get Like => "Like";
  @override
  String get about => "About";
  @override
  String get appName => "Love Music";
  @override
  String get appUpdateActionDownloadAgain => "Download";
  @override
  String get appUpdateActionInstallApk => "Install";
  @override
  String get appUpdateActionUpdate => "Update";
  @override
  String get appUpdateCheckUpdate => "Check Update";
  @override
  String get appUpdateDoubleBackTips => "Press back again, cancel download";
  @override
  String get appUpdateDownloadCanceled => "Download canceled";
  @override
  String get appUpdateDownloadFailed => "Download failed";
  @override
  String get appUpdateDownloading => "Downloading...";
  @override
  String get appUpdateLeastVersion => "Least version now ";
  @override
  String get appUpdateReDownloadContent =>
      "It has been detected that it has been downloaded, whether it is installed?";
  @override
  String get appUpdateUpdate => "Version Update";
  @override
  String get article_tag_top => "Top";
  @override
  String get autoBySystem => "Auto";
  @override
  String get clear => "Clear";
  @override
  String get close => "Close";
  @override
  String get coin => "Coin";
  @override
  String get collectionRemove => "Remove";
  @override
  String get favourites => "Favorites";
  @override
  String get feedback => "FeedBack";
  @override
  String get fieldNotNull => "not empty";
  @override
  String get fontKuaiLe => "ZCOOL KuaiLe";
  @override
  String get githubIssue => "Can't find mail app,please github issues";
  @override
  String get loadFailed => "Load failed,retry later";
  @override
  String get logout => "Sign Out";
  @override
  String get myFavourites => "My favourites";
  @override
  String get needLogin => "Go to Sign In";
  @override
  String get noAccount => "No Account ? ";
  @override
  String get openBrowser => "Open Browser";
  @override
  String get password => "Please input Password";
  @override
  String get rate => "Rate";
  @override
  String get rePassword => "Confirm Password";
  @override
  String get refresh => "Refresh";
  @override
  String get refreshTwoLevel => "release to enter second floor";
  @override
  String get retry => "Retry";
  @override
  String get searchHistory => "History";
  @override
  String get searchHot => "Hot";
  @override
  String get searchShake => "Shake";
  @override
  String get setting => "Setting";
  @override
  String get settingFont => "System Font";
  @override
  String get share => "Share";
  @override
  String get signIn => "Sign In";
  @override
  String get signIn3thd => "More";
  @override
  String get welcome => "Welcome";
  @override
  String get signUp => "Sign Up";
  @override
  String get splashSkip => "Skip";
  @override
  String get searchResult => "Search Result:";
  @override
  String get toSignIn => "Sign In";
  @override
  String get forYou => "Song new";
  @override
  String get toSignUp => "Sign Up";
  @override
  String get twoPwdDifferent => "The two passwords differ";
  @override
  String get unLike => "UnLike";
  @override
  String get userName => "Please input Username";
  @override
  String get viewStateButtonLogin => "Sign In";
  @override
  String get viewStateButtonRefresh => "Refresh";
  @override
  String get viewStateMessageEmpty => "Nothing Found";
  @override
  String get viewStateMessageError => "Load Failed";
  @override
  String get viewStateMessageUnAuth => "Not sign in yet";
  @override
  String get wechatAccount => "Wechat";
  @override
  String appUpdateFoundNewVersion(String version) => "New version $version";
  @override
  @override
  String get weekChart => "#CHART TUẦN";
  @override
  String get week => "Tuần";
  @override
  String get ablumsHot => "Albums hot";
  @override
  String get songNew => "Mới phát hành";
  @override
  String get viewAll => "Xem tất cả";
  @override
  String get takeCare => "Gợi ý cho bạn";
  @override
  String get top100 => "Top 100";
  @override
  String get genres => "Thể loại";
  @override
  String get motions => "Chủ đề";
  @override
  String get nations => "Quốc gia";
  @override
  String get artistsTop => "Nghệ sĩ nổi bật";
  @override
  String get numFollow => "quan tâm";
  @override
  String get follow => "Quan tâm";
  @override
  String get followed => "Đã quan tâm";
  @override
  String get tabSearch => "Tìm kiếm";
  @override
  String get tabMusic => "BXH";
  @override
  String get tabFavorite => "Thư viện";
  @override
  String get tabUser => "Tôi";
  @override
  String get theme => "Chủ đề";
  @override
  String get darkMode => "Chế độ tối";
  @override
  String get viewStateMessageNetworkError => "Thất bại, kiểm tra network!";
  @override
  String get viewStateButtonRetry => "Thử lại";
  @override
  String get settingLanguage => "Ngôn ngữ";
  @override
  String get searchSuggest => "Track, album, artist, podcast";
  @override
  String get actionCancel => "Hủy";
  @override
  String get actionConfirm => "OK";
  @override
  String get titleLogin => "Đăng nhập";
  @override
  String get titleInfo => "Thông tin tài khoản";
  @override
  String get titleNoti => "Thông báo";
  @override
  String get successRegister => "Bạn đã đăng ký tài khoản thành công!";
  @override
  String get titleLogout => "Đăng xuất";
  @override
  String get btnRandomPlay => "Phát ngẫu nhiên";
  @override
  String get tabbarPlaylist => "Playlist";
  @override
  String get download => "Tải về";
  @override
  String get downloaded => "Đã tải";
  @override
  String get tabbarVietNam => "VIỆT NAM";
  @override
  String get titleAddToFavorite => "Thêm vào thư viện";
  @override
  String get titleAddToPlaylist => "Thêm vào danh sách phát";
  @override
  String get createPlaylist => "Tạo danh sách phát";
  @override
  String get hintPlaylist => "Danh sách #1";
  @override
  String get titleComment => "Bình luận";
  @override
  String get enterComment => "Bình luận...";
  @override
  String get scheduler => "Hẹn giờ tắt";
  @override
  String get enterMinutes => "Nhập số phút";
  @override
  String get loading => "Đang tải...";
  @override
  String get songs => "Bài hát";
  @override
  String get albums => "Albums";
  @override
  String get artists => "Nghệ sĩ";
  @override
  String get all => "Tất cả";
  @override
  String get canLike => "Có thể bạn quan tâm";
  @override
  String get topSong => "Top bài hát";
  @override
  String get contributionArtists => "Nghệ sĩ đóng góp";
  @override
  String get btnUpdate => "Cập nhật";
  @override
  String get titleConfirmPassword => "Xác minh mật khẩu";
  @override
  String get titleForgotPass => "Quên mật khẩu?";
  @override
  String get btnLoginFB => "Đăng nhập với Facebook";
  @override
  String get titleNoAccount => "Bạn chưa có tài khoản?";
  @override
  String get titleHaveAccount => "Bạn đã có tài khoản?";
  @override
  String get titleRegister => "Đăng ký ngay";
  @override
  String get or => "hoặc";
  @override
  String get warnLogin => "Bạn cần đăng nhập để thực hiện hành động này!";
  @override
  String get successCreatePlaylist => "Đã tạo danh sách phát ";
  @override
  String get successAddToPlaylist => "Đã thêm vào sách phát ";
  @override
  String get successAddToDownload => "Đã thêm vào hàng chờ tải về! ";
  @override
  String get successAddFavorite => "Đã thêm vào thư viện!";
  @override
  String get deleteFavorite => "Xóa khỏi thư viện";
  @override
  String get successDelete => "Đã xóa khỏi thư viện!";
  @override
  String get myMusic => "Thư viện của tôi";
  @override
  String get hotTop100 => "Nổi bật";
  @override
  String get top100VN => "Top 100 Việt Nam";
  @override
  String get top100AuMy => "Top 100 US - UK";
  @override
  String get top100Asia => "Top 100 Châu Á";
  @override
  String get top100Concert => "Top 100 Hòa tấu";
  @override
  String get noLyric => "Chưa có lời bài hát!";
}

class GeneratedLocalizationsDelegate extends LocalizationsDelegate<S> {
  const GeneratedLocalizationsDelegate();

  List<Locale> get supportedLocales {
    return const <Locale>[
      Locale("en", ""),
      Locale("zh", "CN"),
    ];
  }

  LocaleListResolutionCallback listResolution(
      {Locale fallback, bool withCountry = true}) {
    return (List<Locale> locales, Iterable<Locale> supported) {
      if (locales == null || locales.isEmpty) {
        return fallback ?? supported.first;
      } else {
        return _resolve(locales.first, fallback, supported, withCountry);
      }
    };
  }

  LocaleResolutionCallback resolution(
      {Locale fallback, bool withCountry = true}) {
    return (Locale locale, Iterable<Locale> supported) {
      return _resolve(locale, fallback, supported, withCountry);
    };
  }

  @override
  Future<S> load(Locale locale) {
    final String lang = getLang(locale);
    if (lang != null) {
      switch (lang) {
        case "en":
          S.current = const $en();
          return SynchronousFuture<S>(S.current);
        case "zh_CN":
          S.current = const $zh_CN();
          return SynchronousFuture<S>(S.current);
        default:
        // NO-OP.
      }
    }
    S.current = const S();
    return SynchronousFuture<S>(S.current);
  }

  @override
  bool isSupported(Locale locale) => _isSupported(locale, true);

  @override
  bool shouldReload(GeneratedLocalizationsDelegate old) => false;

  ///
  /// Internal method to resolve a locale from a list of locales.
  ///
  Locale _resolve(Locale locale, Locale fallback, Iterable<Locale> supported,
      bool withCountry) {
    if (locale == null || !_isSupported(locale, withCountry)) {
      return fallback ?? supported.first;
    }

    final Locale languageLocale = Locale(locale.languageCode, "");
    if (supported.contains(locale)) {
      return locale;
    } else if (supported.contains(languageLocale)) {
      return languageLocale;
    } else {
      final Locale fallbackLocale = fallback ?? supported.first;
      return fallbackLocale;
    }
  }

  ///
  /// Returns true if the specified locale is supported, false otherwise.
  ///
  bool _isSupported(Locale locale, bool withCountry) {
    if (locale != null) {
      for (Locale supportedLocale in supportedLocales) {
        // Language must always match both locales.
        if (supportedLocale.languageCode != locale.languageCode) {
          continue;
        }

        // If country code matches, return this locale.
        if (supportedLocale.countryCode == locale.countryCode) {
          return true;
        }

        // If no country requirement is requested, check if this locale has no country.
        if (true != withCountry &&
            (supportedLocale.countryCode == null ||
                supportedLocale.countryCode.isEmpty)) {
          return true;
        }
      }
    }
    return false;
  }
}

String getLang(Locale l) => l == null
    ? null
    : l.countryCode != null && l.countryCode.isEmpty
        ? l.languageCode
        : l.toString();
